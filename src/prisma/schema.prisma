// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Guilds {
    discordId          String          @id @map("_id")
    adminCommand       String[]        @default([])
    adminMember        String[]        @default([])
    adminRole          String[]        @default([])
    onboardSchedule    OnboardInform[]
    womenVibesSchedule OnboardInform[]
    channels           ChannelSetting
    switch             SwitchInform
}

model ChannelScan {
    discordId  String     @id @map("_id")
    categories Category[]
}

model Birthday {
    userId   String @id @map("_id")
    date     String
    month    String
    day      String
    timezone String
}

model Mentorship {
    discordId         String @id @map("_id")
    adminRole         String @default("")
    mentorChannel     String @default("")
    playgroundChannel String @default("")
    tokenPerMin       Int    @default(0)
}

model Mentee {
    menteeId       String  @id @map("_id")
    discordId      String
    discordName    String
    mentorId       String
    mentoName      String
    mentorMentorId String?
}

model Mentor {
    mentorId   String   @id @map("_id")
    discordId  String
    mentoName  String
    menteesRef String[] @default([])
    rewardsRef String[]
}

model Reward {
    id            String @id @default(auto()) @map("_id") @db.ObjectId
    epochId       Int
    confirmedMins Int
}

model Epoch {
    epochId        Int    @id @map("_id")
    startTimestamp String
    endTimestamp   String
}

model Record {
    id              String  @id @default(auto()) @map("_id") @db.ObjectId
    discordId       String
    epochId         Int
    mentorDiscordId String
    menteeDiscordId String
    claimedMins     String
    Confirmend      Boolean @default(false)
}

model HashNodeSub {
    id               String @id @default(auto()) @map("_id") @db.ObjectId
    discordId        String
    hashNodeUserName String
    latestCuid       String @default("")
}

model Contact {
    id              String @id @map("_id")
    discordId       String
    title           String
    description     String
    socialMediaLink String @default("")
}

type ChannelSetting {
    introductionChannel        String   @default("")
    womenIntroductionChannel   String   @default("")
    notificationChannel        String   @default("")
    onboardChannel             String   @default("")
    womenVibesChannel          String   @default("")
    celebrateChannel           String   @default("")
    onboardNotificationChannel String   @default("")
    hashNodeSubChannel         String   @default("")
    birthdayChannel            String   @default("")
    archiveCategoryChannels    String[] @default([])
}

type ChannelInform {
    channelId        String
    channelName      String
    lastMsgTimestamp String
    messageId        String
    status           Boolean
    archiveTimestamp String
}

type SwitchInform {
    autoArchiveSwitch Boolean
}

type Category {
    parentId   String
    parentName String
    channels   ChannelInform[]
}

type OnboardInform {
    timestamp String
    eventLink String
}
